import { test, expect } from '@playwright/test';
import config from './visual-test-config.js';

// This file was auto-generated by generate-tests.js on 2025-05-31T09:29:01.028Z
// Do not modify this file directly, as it will be overwritten

// Components will be fetched from library.json and inserted here
interface Component {
  name: string;
  path: string;
}

const components: Component[] = [
  {
    "name": "columns",
    "path": "/tools/blocks/columns"
  },
  {
    "name": "cards",
    "path": "/tools/blocks/cards"
  }
];

// Verify we have components to test
test('Should have components to test', async () => {
  expect(components.length).toBeGreaterThan(0);
});

// For each viewport defined in the config
for (const viewport of config.viewports) {
  test.describe(`Viewport: ${viewport.name} (${viewport.width}x${viewport.height})`, () => {
    // Set up the viewport size for all tests in this describe block
    test.beforeEach(async ({ page }) => {
      await page.setViewportSize({ 
        width: viewport.width, 
        height: viewport.height 
      });
    });
    
    // Individual tests for each component will be generated here
    
    test('Component: columns', async ({ page }) => {
      console.log('Testing component: columns at path: /tools/blocks/columns for viewport: ' + viewport.name);
      
      // Navigate to the component
      await page.goto('/tools/blocks/columns');
      
      // Get the appropriate selector
      const selector = config.options.customSelectors?.['columns'] || '.columns';
      
      // Wait for component to be fully rendered
      await page.waitForSelector(selector, { state: 'visible' });
      
      // Wait for stabilization time if configured
      if (config.options.stabilizationTime) {
        await page.waitForTimeout(config.options.stabilizationTime);
      }
      
      // Take screenshot for comparison
      await expect(page.locator(selector)).toHaveScreenshot(
        'columns-' + viewport.name + '.png'
      );
    });
    test('Component: cards', async ({ page }) => {
      console.log('Testing component: cards at path: /tools/blocks/cards for viewport: ' + viewport.name);
      
      // Navigate to the component
      await page.goto('/tools/blocks/cards');
      
      // Get the appropriate selector
      const selector = config.options.customSelectors?.['cards'] || '.cards';
      
      // Wait for component to be fully rendered
      await page.waitForSelector(selector, { state: 'visible' });
      
      // Wait for stabilization time if configured
      if (config.options.stabilizationTime) {
        await page.waitForTimeout(config.options.stabilizationTime);
      }
      
      // Take screenshot for comparison
      await expect(page.locator(selector)).toHaveScreenshot(
        'cards-' + viewport.name + '.png'
      );
    });
  });
}
